{"version":3,"sources":["redux/types/types.js","redux/reducers/authReducer.js","helpers/updateObject.js","redux/reducers/postReducer.js","redux/reducers/modalReducer.js","redux/reducers/formReducer.js","redux/reducers/rootReducer.js","redux/store/store.js","helpers/fetch.js","redux/actions/authAction.js","routes/PublicRoute.js","routes/PrivateRoute.js","hooks/useForm.js","components/ui/Navbar.js","redux/actions/modalAction.js","redux/actions/postAction.js","components/posts/PostCard.js","components/posts/Form.js","components/ui/NewPostModal.js","routes/routes.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/HomeScreen.js","routes/AppRouter.js","AnoniTalksApp.js","index.js"],"names":["types","initialState","checking","updateObject","state","content","index","_","findIndex","posts","id","splice","post","title","selectedPost","openModal","type","rootReducer","combineReducers","auth","action","payload","updatedPost","filter","modal","form","console","log","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","checkingFinish","login","user","logout","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","Navbar","dispatch","useDispatch","onClick","clear","closeModal","postsStartLoading","a","resp","json","PostCard","ok","Swal","fire","msg","postDelete","defaultProps","Form","_state","_setState","useEffect","e","handleSubmit","preventDefault","errors","sendPost","postUpdate","onSubmit","className","placeholder","autoComplete","onChange","Modal","setAppElement","NewPostModal","useSelector","handleCloseModal","isOpen","onRequestClose","closeTimeoutMS","overlayClassName","routes","layout","hasLogged","exact","path","lemail","lpassword","formLoginValues","handleLoginInputChange","email","password","setItem","Date","getTime","uid","rname","remail","rpassword1","rpassword2","formRegisterValues","handleRegisterInputChange","map","key","AppRouter","r","Guard","_r","AnoniTalksApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f98a8d17.chunk.js","sourcesContent":["export const types = {\r\n\r\n  authCheckingFinish: '[auth] Finish checking login state',\r\n  authStartLogin: '[auth] Start login',\r\n  authLogin: '[auth] Login',\r\n\r\n  authStartRegister: '[auth] Start Register',\r\n  authStartTokenRenew: '[auth] Start token renew',\r\n  authLogout: '[auth] Logout',\r\n\r\n  postsLoaded: '[posts] Posts loaded',\r\n  sendPost: '[post] Send post',\r\n  updatePost: '[post] Update post',\r\n  deletePost: '[post] Delete post',\r\n\r\n  openModal: '[modal] Open modal',\r\n  closeModal: '[modal] Close modal',\r\n  updateModal: '[modal] Type modal',\r\n\r\n  postId: '[post] postId',\r\n  cleanPost: '[post] cleanPost',\r\n\r\n  sendForm: '[form] sendForm'\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n  checking: true,\r\n\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n  switch ( action.type ) {\r\n\r\n    case types.authLogin:\r\n      return {\r\n        ...state,\r\n        checking: false,\r\n        ...action.payload\r\n      }\r\n\r\n    case types.authCheckingFinish:\r\n      return {\r\n        ...state,\r\n        checking: false\r\n      }\r\n\r\n    case types.authLogout:\r\n      return {\r\n        checking: false\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import _ from \"lodash\"\r\n\r\nexport const updateObject = (state, content) => {\r\n    let index = _.findIndex(state.posts, {id: content.id});\r\n    const newArray = state.posts.splice(index, 1, content);\r\n\r\n    return newArray\r\n}","import { types } from \"../types/types\";\r\n// import _ from \"lodash\"\r\nimport { updateObject } from \"../../helpers/updateObject\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: {\r\n    id: '',\r\n    title: '',\r\n    content: ''\r\n  },\r\n};\r\n\r\nexport const postReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.postsLoaded:\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n      };\r\n\r\n    case types.sendPost:\r\n      return {\r\n        ...state.posts,\r\n        posts: [...state.posts, action.payload],\r\n      };\r\n\r\n    case types.deletePost:\r\n      const updatedPost = state.posts.filter((post) => post.id !== action.payload)\r\n      return {\r\n        ...state,\r\n        posts: updatedPost,\r\n      };\r\n\r\n    case types.updatePost:\r\n      return {\r\n        ...state,\r\n        posts: updateObject(state, action.payload)\r\n      };\r\n      \r\n    case types.postId:\r\n      return {\r\n        ...state,\r\n        post: action.payload,\r\n      };\r\n\r\n    case types.cleanPost:\r\n      return {\r\n        ...state,\r\n        post: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  selectedPost: {},\r\n  openModal: false,\r\n  type: 'create'\r\n};\r\n\r\nexport const modalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.openModal:\r\n      return {\r\n        ...state,\r\n        selectedPost: action.payload.content,\r\n        type: action.payload.type,\r\n        openModal: true\r\n      };\r\n\r\n    case types.closeModal:\r\n      return {\r\n        ...state,\r\n        selectedPost: {},\r\n        type: 'create',\r\n        openModal: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  title: '',\r\n  content: ''\r\n};\r\n\r\nexport const formReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.sendForm:\r\n      console.log(action);\r\n      return {\r\n        ...state,\r\n        title: action.payload.title,\r\n        content: action.payload.content\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n// Aqui se importan los reducers\r\nimport { authReducer } from \"./authReducer\";\r\nimport { postReducer } from './postReducer';\r\nimport { modalReducer } from './modalReducer';\r\nimport { formReducer } from './formReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n  //Aquí van cada uno de los reducers\r\n  auth: authReducer,\r\n  posts: postReducer,\r\n  modal: modalReducer,\r\n  form: formReducer,\r\n})","import { createStore, compose, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  )\r\n);","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n  \r\n  const url =  `${ baseUrl }/${ endpoint }`;\r\n\r\n  if ( method === 'GET' ) {\r\n    return fetch( url );\r\n  } else {\r\n    return fetch( url, {\r\n      method,\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify( data )\r\n    })\r\n  }\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n  \r\n  const url =  `${ baseUrl }/${ endpoint }`;\r\n  const token = localStorage.getItem('token') || '';\r\n\r\n  if ( method === 'GET' ) {\r\n    return fetch( url, {\r\n      method,\r\n      headers: {\r\n        'x-token': token\r\n      }\r\n    });\r\n  } else {\r\n    return fetch( url, {\r\n      method,\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'x-token': token\r\n      },\r\n      body: JSON.stringify( data )\r\n    })\r\n  }\r\n}\r\n\r\nexport {\r\n  fetchSinToken,\r\n  fetchConToken\r\n}","import { types } from '../types/types';\r\nimport { fetchSinToken, fetchConToken } from '../../helpers/fetch';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const startLogin = (email, password) => {\r\n  //Se recibe como argumento a dispatch gracias a redux-thunk\r\n  return async(dispatch) => {\r\n\r\n    const resp = await fetchSinToken('auth', { email, password }, 'POST' )\r\n    const body = await resp.json();\r\n\r\n    // console.log(body);\r\n\r\n    if ( body.ok ) {\r\n      localStorage.setItem('token', body.token );\r\n      localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n      dispatch( login({\r\n        uid: body.uid,\r\n        name: body.name\r\n      }) )\r\n    } else {\r\n      Swal.fire('Error', body.msg, 'error');\r\n    }\r\n  }\r\n}\r\n\r\nexport const startRegister = (name, email, password) => {\r\n  return async(dispatch) => {\r\n\r\n    const resp = await fetchSinToken('auth/new', { name, email, password }, 'POST' )\r\n    const body = await resp.json();\r\n\r\n\r\n    if ( body.ok ) {\r\n      localStorage.setItem('token', body.token );\r\n      localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n      dispatch( login({\r\n        uid: body.uid,\r\n        name: body.name\r\n      }) )\r\n    } else {\r\n      Swal.fire('Error', body.msg, 'error');\r\n    }\r\n  }\r\n}\r\n\r\nexport const startChecking = () => {\r\n  return async(dispatch) => {\r\n\r\n    const resp = await fetchConToken('auth/renew');\r\n    const body = await resp.json();\r\n\r\n\r\n    if ( body.ok ) {\r\n      localStorage.setItem('token', body.token );\r\n      localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n      dispatch( login({\r\n        uid: body.uid,\r\n        name: body.name\r\n      }) )\r\n    } else {\r\n      dispatch( checkingFinish() );\r\n    }\r\n  }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish});\r\n\r\nexport const login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n  return( dispatch ) => {\r\n    localStorage.clear();\r\n    dispatch( logout() );\r\n  }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout})","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n\r\n\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        console.log(target);\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n        console.log(values);\r\n    }\r\n    return [ values, handleInputChange, reset ];\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { startLogout } from '../../redux/actions/authAction';\r\n\r\nexport const Navbar = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch( startLogout() );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Navbar</h1>\r\n      <button onClick={ handleLogout }>Logout</button>\r\n    </div>\r\n  )\r\n}\r\n","import { types } from '../types/types';\r\n\r\nexport const openModal = ({ type = 'create', content = { title: \"\", content: \"\" }}) => ({\r\n  type: types.openModal,\r\n  payload: { type, content }\r\n});\r\n\r\nexport const closeModal = () => ({\r\n  type: types.closeModal,\r\n})","import { fetchConToken } from \"../../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\nimport { closeModal } from \"./modalAction\";\r\n\r\nexport const postsStartLoading = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchConToken(\"posts\");\r\n      const body = await resp.json();\r\n\r\n      const posts = body.posts;\r\n\r\n      return dispatch({\r\n        type: types.postsLoaded,\r\n        payload: posts,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n// const postsLoaded = (posts) => ({\r\n//   type: types.postsLoaded,\r\n//   payload: posts,\r\n// });\r\n\r\nexport const sendPost = ({title, content}) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchConToken(\"posts\", { title, content }, \"POST\");\r\n      const body = await resp.json();\r\n\r\n      const { post } = body;\r\n\r\n      if (body.ok) {\r\n        dispatch({\r\n          type: types.sendPost,\r\n          payload: post,\r\n        });\r\n        Swal.fire(\"Listo!\", \"Post Agregado!\", \"success\");\r\n        dispatch(closeModal());\r\n        dispatch(postsStartLoading());\r\n      } else {\r\n        Swal.fire(\"Error\", body.errors.title.msg, \"error\");\r\n        Swal.fire(\"Error\", body.errors.content.msg, \"error\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const postDelete = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchConToken(`posts/${id}`, {}, \"DELETE\");\r\n      const body = await resp.json();\r\n\r\n      if (body.ok) {\r\n        dispatch({ type: types.deletePost, payload: id });\r\n        Swal.fire(\"Listo!\", \"Post Borrado!\", \"success\");\r\n        dispatch(postsStartLoading());\r\n      } else {\r\n        Swal.fire(\"Error\", body.msg, \"error\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const postUpdate = ({title, content, id}) => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const resp = await fetchConToken(`posts/${id}`, {title, content, id}, \"PUT\");\r\n      const body = await resp.json();\r\n\r\n      const post = {\r\n        title,\r\n        content,\r\n        id\r\n      }\r\n\r\n      if (body.ok) {\r\n        dispatch({\r\n          type: types.updatePost,\r\n          payload: post,\r\n        });\r\n        Swal.fire(\"Listo!\", \"Post Actualizado!\", \"success\");\r\n        dispatch(closeModal());\r\n        dispatch(postsStartLoading());\r\n      } else {\r\n        Swal.fire(\"Error\", body.msg, \"error\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const setPostId = (id, title, content) => ({\r\n  type: types.postId,\r\n  payload: {\r\n    id,\r\n    title,\r\n    content\r\n  }\r\n});\r\n\r\n  export const cleanPost = () => ({\r\n    type: types.cleanPost,\r\n    payload: {\r\n      title: '',\r\n      content:''\r\n    }\r\n  });\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { postDelete } from '../../redux/actions/postAction'\r\nimport { openModal } from \"../../redux/actions/modalAction\";\r\n// import { openModal } from \"../../actions/auxAction\";\r\n\r\nexport const PostCard = ({user, title, content, id}) => {\r\n  \r\nconst dispatch = useDispatch()\r\n\r\n// console.log(\"PostCard\");\r\n\r\n  const openDeletePost = () => {\r\n    dispatch(postDelete(id));\r\n    // console.log(id);\r\n  }\r\n  \r\n  const HandleOpenModal=()=> {\r\n    // console.log({type: 'update', content:{id, title, content}})\r\n    dispatch(openModal({type: 'update', content:{id, title, content}}))\r\n  }\r\n  // dispatch(openAuxModal({type: 'update', content:{id, title, content}}))\r\n  return (\r\n    <div>\r\n      <button onClick={openDeletePost}>Eliminar</button>\r\n      <button onClick={HandleOpenModal}>Actualizar</button>\r\n      <h3>{ user }</h3>\r\n      <span>{ title }</span>\r\n      <p>\r\n        { content }\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  user: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  content: PropTypes.string.isRequired\r\n}\r\n\r\nPostCard.defaultProps = {\r\n  user: 'User',\r\n  title: 'Title',\r\n  content: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Facere animi porro hic quaerat, doloribus possimus fugit sunt ex obcaecati dolores, quidem veritatis repellendus velit dolor! Ea tempora asperiores consectetur nulla!'\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  sendPost,\r\n  postUpdate,\r\n} from \"../../redux/actions/postAction\";\r\n\r\nexport const Form = ({\r\n  title,\r\n  content,\r\n  id = '',\r\n  type,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [_state, _setState] = useState({\r\n    title: '',\r\n    content: '',\r\n    id: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    _setState({ ..._state, title, content, id });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    const target = e.target;\r\n\r\n    _setState({\r\n      ..._state,\r\n      [target.name]: target.value\r\n    });\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    \r\n    if (type === \"create\") dispatch(sendPost(_state));\r\n    else if (type === \"update\") dispatch(postUpdate(_state));\r\n    return;\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)} className=\"container\">\r\n      <input\r\n        className=\"inTitle\"\r\n        placeholder=\"Título del post\"\r\n        type=\"text\"\r\n        name=\"title\"\r\n        autoComplete=\"off\"\r\n        value={_state.title}\r\n        onChange={(e) => handleInputChange(e)}\r\n      />\r\n      <br />\r\n      <textarea\r\n        type=\"text\"\r\n        className=\"text-content\"\r\n        placeholder=\"Escribe tu post aqui.\"\r\n        name=\"content\"\r\n        autoComplete=\"off\"\r\n        value={_state.content}\r\n        onChange={(e) => handleInputChange(e)}\r\n      />\r\n      <input type=\"submit\" className=\"mgy center\" value={type === \"create\" ? \"Postear\" : \"Actualizar\"} />\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"../../styles/modal.css\";\r\nimport Modal from \"react-modal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { closeModal } from \"../../redux/actions/modalAction\";\r\nimport { Form } from \"../posts/Form\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nexport const NewPostModal = () => {\r\n  const dispatch = useDispatch();\r\n  const { openModal, type, selectedPost } = useSelector(({ modal }) => modal);\r\n\r\n  const handleCloseModal= () => dispatch(closeModal())\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={openModal}\r\n        onRequestClose={handleCloseModal}\r\n        closeTimeoutMS={200}\r\n        className=\"modal\"\r\n        overlayClassName=\"modal-fondo\"\r\n      >\r\n        {type === 'create' ? (\r\n          <Form\r\n            title={selectedPost.title}\r\n            content={selectedPost.content}\r\n            type=\"create\"\r\n          />\r\n        ) : (\r\n          <Form\r\n            title={selectedPost.title}\r\n            content={selectedPost.content}\r\n            id={selectedPost.id}\r\n            type=\"update\"\r\n          />\r\n        )}\r\n        <button onClick={handleCloseModal}>Cerrar modal</button> \r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n","\r\nimport { LoginScreen } from \"../screens/LoginScreen\";\r\nimport { HomeScreen } from \"../screens/HomeScreen\";\r\nimport { RegisterScreen } from \"../screens/RegisterScreen\";\r\n\r\nexport const routes = [{\r\n    layout: \"inicio-sesion\",\r\n    hasLogged: false,\r\n    routes: [\r\n      {\r\n        exact: true,\r\n        path: \"/login\",\r\n        component: LoginScreen,\r\n      },\r\n      {\r\n        exact: true,\r\n        path: \"/signup\",\r\n        component: RegisterScreen,\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    layout: \"app\",\r\n    hasLogged: true,\r\n    routes: [\r\n      {\r\n        exact: true,\r\n        path: \"/\",\r\n        component: HomeScreen,\r\n      }\r\n    ]\r\n  }];","import React from \"react\";\r\nimport { useForm } from '../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin } from \"../redux/actions/authAction\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const LoginScreen = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n    lemail: \"jorge@gmail.com\",\r\n    lpassword: \"123456\",\r\n  });\r\n\r\n  const { lemail, lpassword } = formLoginValues;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch( startLogin(lemail, lpassword) );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>LoginScreen</h1>\r\n      <form onSubmit={ handleLogin }>\r\n        <input\r\n          className=\"\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          name=\"lemail\"\r\n          autoComplete=\"off\"\r\n          value={ lemail }\r\n          onChange={ handleLoginInputChange }\r\n        />\r\n\r\n        <input\r\n          className=\"\"\r\n          type=\"text\"\r\n          placeholder=\"Password\"\r\n          name=\"lpassword\"\r\n          autoComplete=\"off\"\r\n          value={ lpassword }\r\n          onChange={ handleLoginInputChange }\r\n        />\r\n\r\n        <input type=\"submit\" className=\"\" value=\"Entrar\" />\r\n        <Link to=\"/signup\">Sign up</Link>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { startRegister } from '../redux/actions/authAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from '../hooks/useForm';\r\nimport Swal from 'sweetalert2';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n    rname: 'jorge',\r\n    remail: \"jorge@gmail.com\",\r\n    rpassword1: \"123456\",\r\n    rpassword2: \"123456\",\r\n  });\r\n\r\n  const { rname, remail, rpassword1, rpassword2 } = formRegisterValues;\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    if ( rpassword1 !== rpassword2 ) {\r\n      return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\r\n    }\r\n\r\n    dispatch( startRegister( rname, remail, rpassword1 ) );\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>Register</h1>\r\n      <form onSubmit={ handleRegister }>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          name=\"rname\"\r\n          className=\"\"\r\n          autoComplete=\"off\"\r\n          value={ rname }\r\n          onChange={ handleRegisterInputChange }\r\n        />\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          name=\"remail\"\r\n          className=\"\"\r\n          autoComplete=\"off\"\r\n          value={ remail }\r\n          onChange={ handleRegisterInputChange }\r\n        />\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Password\"\r\n          name=\"rpassword1\"\r\n          className=\"\"\r\n          autoComplete=\"off\"\r\n          value={ rpassword1 }\r\n          onChange={ handleRegisterInputChange }\r\n        />\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Confirm password\"\r\n          name=\"rpassword2\"\r\n          className=\"\"\r\n          autoComplete=\"off\"\r\n          value={ rpassword2 }\r\n          onChange={ handleRegisterInputChange }\r\n        />\r\n\r\n        <input type=\"submit\" className=\"\" value=\"Register\" />\r\n      </form>\r\n      <Link to=\"/login\" >Login</Link>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Navbar } from '../components/ui/Navbar'\r\nimport { PostCard } from '../components/posts/PostCard'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { postsStartLoading } from '../redux/actions/postAction'\r\nimport { NewPostModal } from '../components/ui/NewPostModal'\r\nimport { openModal } from '../redux/actions/modalAction'\r\n\r\nexport const HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n  \r\n  const { posts } = useSelector(state => state.posts);\r\n  \r\n  useEffect(() => {\r\n    dispatch(postsStartLoading());\r\n  }, [dispatch])\r\n\r\n  const handleOpenModal = () => dispatch(openModal({}))\r\n\r\n  return (\r\n    <div>\r\n      <h1>HomeScreen</h1>\r\n      <Navbar />\r\n      <hr/>\r\n      <button onClick={() => handleOpenModal()}>\r\n        Agregar post\r\n      </button>\r\n      <center>\r\n        {\r\n          posts.map((post) =>\r\n            <PostCard \r\n              key={post.id} \r\n              {...post}\r\n              user={post.user.name}\r\n            />\r\n          )\r\n        }\r\n      </center>\r\n      <NewPostModal />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startChecking } from \"../redux/actions/authAction\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { routes } from './routes';\r\n\r\nexport const AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state.auth);\r\n  const { checking, uid } = state;\r\n\r\n  useEffect(() => {\r\n    dispatch(startChecking());\r\n  }, [dispatch]);\r\n\r\n  \r\n  if (checking) {\r\n    return <h5>Espere...</h5>;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          {routes.map((r) => {\r\n            const Guard = r.hasLogged ? PrivateRoute : PublicRoute;\r\n            return r.routes.map((_r) => (\r\n              <Guard\r\n                key={_r.path}\r\n                path={_r.path}\r\n                exact={_r.exact}\r\n                isAuthenticated={!!uid}\r\n                component={_r.component}\r\n              />\r\n            ))}\r\n          )}\r\n          <Redirect to=\"/login\" /> \r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store/store';\r\nimport { AppRouter } from './routes/AppRouter';\r\nimport './styles/index.css'\r\n\r\nexport const AnoniTalksApp = () => {\r\n  return (\r\n    <Provider store={ store }>\r\n      <AppRouter />\r\n    </Provider>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AnoniTalksApp } from './AnoniTalksApp';\n\nReactDOM.render(\n    <AnoniTalksApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}