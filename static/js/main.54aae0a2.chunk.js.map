{"version":3,"sources":["redux/types/types.js","redux/reducers/authReducer.js","helpers/updateObject.js","redux/reducers/postReducer.js","redux/reducers/modalReducer.js","redux/reducers/formReducer.js","redux/reducers/rootReducer.js","redux/store/store.js","helpers/fetch.js","redux/actions/authAction.js","routes/PublicRoute.js","routes/PrivateRoute.js","hooks/useForm.js","components/ui/Navbar.js","redux/actions/modalAction.js","redux/actions/postAction.js","components/posts/PostCard.js","components/posts/Form.js","components/ui/NewPostModal.js","routes/routes.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/HomeScreen.js","routes/AppRouter.js","AnoniTalksApp.js","index.js"],"names":["types","initialState","checking","updateObject","state","content","index","_","findIndex","posts","id","splice","post","title","selectedPost","openModal","type","rootReducer","combineReducers","auth","action","payload","updatedPost","filter","modal","form","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","checkingFinish","login","user","logout","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","Navbar","dispatch","useDispatch","onClick","clear","closeModal","postsStartLoading","a","resp","json","Swal","fire","PostCard","ok","msg","postDelete","defaultProps","Form","_state","_setState","useEffect","handleSubmit","e","preventDefault","errors","sendPost","postUpdate","onSubmit","className","placeholder","autoComplete","onChange","Modal","setAppElement","NewPostModal","useSelector","handleCloseModal","isOpen","onRequestClose","closeTimeoutMS","overlayClassName","IconButton","aria-label","fontSize","routes","layout","hasLogged","exact","path","lemail","lpassword","formLoginValues","handleLoginInputChange","email","password","setItem","Date","getTime","uid","rname","remail","rpassword1","rpassword2","formRegisterValues","handleRegisterInputChange","map","AppRouter","r","Guard","_r","AnoniTalksApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54aae0a2.chunk.js","sourcesContent":["export const types = {\r\n\tauthCheckingFinish: '[auth] Finish checking login state',\r\n\tauthStartLogin: '[auth] Start login',\r\n\tauthLogin: '[auth] Login',\r\n\r\n\tauthStartRegister: '[auth] Start Register',\r\n\tauthStartTokenRenew: '[auth] Start token renew',\r\n\tauthLogout: '[auth] Logout',\r\n\r\n\tpostsLoaded: '[posts] Posts loaded',\r\n\tsendPost: '[post] Send post',\r\n\tupdatePost: '[post] Update post',\r\n\tdeletePost: '[post] Delete post',\r\n\r\n\topenModal: '[modal] Open modal',\r\n\tcloseModal: '[modal] Close modal',\r\n\tupdateModal: '[modal] Type modal',\r\n\r\n\tpostId: '[post] postId',\r\n\tcleanPost: '[post] cleanPost',\r\n\r\n\tsendForm: '[form] sendForm',\r\n};\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n\tchecking: true,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase types.authLogin:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tchecking: false,\r\n\t\t\t\t...action.payload,\r\n\t\t\t};\r\n\r\n\t\tcase types.authCheckingFinish:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tchecking: false,\r\n\t\t\t};\r\n\r\n\t\tcase types.authLogout:\r\n\t\t\treturn {\r\n\t\t\t\tchecking: false,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import _ from 'lodash';\r\n\r\nexport const updateObject = (state, content) => {\r\n\tconst index = _.findIndex(state.posts, { id: content.id });\r\n\tconst newArray = state.posts.splice(index, 1, content);\r\n\r\n\treturn newArray;\r\n};\r\n","import { types } from '../types/types';\r\nimport { updateObject } from '../../helpers/updateObject';\r\n\r\nconst initialState = {\r\n\tposts: [],\r\n\tpost: {\r\n\t\tid: '',\r\n\t\ttitle: '',\r\n\t\tcontent: '',\r\n\t},\r\n};\r\n\r\nexport const postReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase types.postsLoaded:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: action.payload,\r\n\t\t\t};\r\n\r\n\t\tcase types.sendPost:\r\n\t\t\treturn {\r\n\t\t\t\t...state.posts,\r\n\t\t\t\tposts: [...state.posts, action.payload],\r\n\t\t\t};\r\n\r\n\t\tcase types.deletePost:\r\n\t\t\tconst updatedPost = state.posts.filter((post) => {\r\n\t\t\t\tpost.id !== action.payload;\r\n\t\t\t});\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: updatedPost,\r\n\t\t\t};\r\n\r\n\t\tcase types.updatePost:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: updateObject(state, action.payload),\r\n\t\t\t};\r\n\r\n\t\tcase types.postId:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpost: action.payload,\r\n\t\t\t};\r\n\r\n\t\tcase types.cleanPost:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpost: action.payload,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n\tselectedPost: {},\r\n\topenModal: false,\r\n\ttype: 'create',\r\n};\r\n\r\nexport const modalReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase types.openModal:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedPost: action.payload.content,\r\n\t\t\t\ttype: action.payload.type,\r\n\t\t\t\topenModal: true,\r\n\t\t\t};\r\n\r\n\t\tcase types.closeModal:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedPost: {},\r\n\t\t\t\ttype: 'create',\r\n\t\t\t\topenModal: false,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n\ttitle: '',\r\n\tcontent: '',\r\n};\r\n\r\nexport const formReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase types.sendForm:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttitle: action.payload.title,\r\n\t\t\t\tcontent: action.payload.content,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { combineReducers } from 'redux';\r\n// Aqui se importan los reducers\r\nimport { authReducer } from './authReducer';\r\nimport { postReducer } from './postReducer';\r\nimport { modalReducer } from './modalReducer';\r\nimport { formReducer } from './formReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n\tauth: authReducer,\r\n\tposts: postReducer,\r\n\tmodal: modalReducer,\r\n\tform: formReducer,\r\n});\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers =\r\n\t(typeof window !== 'undefined' &&\r\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n\tcompose;\r\n\r\nexport const store = createStore(\r\n\trootReducer,\r\n\tcomposeEnhancers(applyMiddleware(thunk)),\r\n);\r\n","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n\tconst url = `${baseUrl}/${endpoint}`;\r\n\r\n\tif (method === 'GET') {\r\n\t\treturn fetch(url);\r\n\t}\r\n\treturn fetch(url, {\r\n\t\tmethod,\r\n\t\theaders: {\r\n\t\t\t'Content-type': 'application/json',\r\n\t\t},\r\n\t\tbody: JSON.stringify(data),\r\n\t});\r\n};\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n\tconst url = `${baseUrl}/${endpoint}`;\r\n\tconst token = localStorage.getItem('token') || '';\r\n\r\n\tif (method === 'GET') {\r\n\t\treturn fetch(url, {\r\n\t\t\tmethod,\r\n\t\t\theaders: {\r\n\t\t\t\t'x-token': token,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\treturn fetch(url, {\r\n\t\tmethod,\r\n\t\theaders: {\r\n\t\t\t'Content-type': 'application/json',\r\n\t\t\t'x-token': token,\r\n\t\t},\r\n\t\tbody: JSON.stringify(data),\r\n\t});\r\n};\r\n\r\nexport { fetchSinToken, fetchConToken };\r\n","import Swal from 'sweetalert2';\r\nimport { types } from '../types/types';\r\nimport { fetchSinToken, fetchConToken } from '../../helpers/fetch';\r\n\r\nexport const startLogin = (email, password) => {\r\n\t// Se recibe como argumento a dispatch gracias a redux-thunk\r\n\treturn async (dispatch) => {\r\n\t\tconst resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n\t\tconst body = await resp.json();\r\n\r\n\t\tif (body.ok) {\r\n\t\t\tlocalStorage.setItem('token', body.token);\r\n\t\t\tlocalStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n\t\t\tdispatch(\r\n\t\t\t\tlogin({\r\n\t\t\t\t\tuid: body.uid,\r\n\t\t\t\t\tname: body.name,\r\n\t\t\t\t}),\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tSwal.fire('Error', body.msg, 'error');\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const startRegister = (name, email, password) => {\r\n\treturn async (dispatch) => {\r\n\t\tconst resp = await fetchSinToken(\r\n\t\t\t'auth/new',\r\n\t\t\t{ name, email, password },\r\n\t\t\t'POST',\r\n\t\t);\r\n\t\tconst body = await resp.json();\r\n\r\n\t\tif (body.ok) {\r\n\t\t\tlocalStorage.setItem('token', body.token);\r\n\t\t\tlocalStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n\t\t\tdispatch(\r\n\t\t\t\tlogin({\r\n\t\t\t\t\tuid: body.uid,\r\n\t\t\t\t\tname: body.name,\r\n\t\t\t\t}),\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tSwal.fire('Error', body.msg, 'error');\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const startChecking = () => {\r\n\treturn async (dispatch) => {\r\n\t\tconst resp = await fetchConToken('auth/renew');\r\n\t\tconst body = await resp.json();\r\n\r\n\t\tif (body.ok) {\r\n\t\t\tlocalStorage.setItem('token', body.token);\r\n\t\t\tlocalStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n\t\t\tdispatch(\r\n\t\t\t\tlogin({\r\n\t\t\t\t\tuid: body.uid,\r\n\t\t\t\t\tname: body.name,\r\n\t\t\t\t}),\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tdispatch(checkingFinish());\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nexport const login = (user) => ({\r\n\ttype: types.authLogin,\r\n\tpayload: user,\r\n});\r\n\r\nexport const startLogout = () => {\r\n\treturn (dispatch) => {\r\n\t\tlocalStorage.clear();\r\n\t\tdispatch(logout());\r\n\t};\r\n};\r\n\r\nconst logout = () => ({ type: types.authLogout });\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PublicRoute = ({\n\tisAuthenticated,\n\tcomponent: Component,\n\t...rest\n}) => {\n\treturn (\n\t\t<Route\n\t\t\t{...rest}\n\t\t\tcomponent={(props) =>\n\t\t\t\tisAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} />\n\t\t\t}\n\t\t/>\n\t);\n};\n\nPublicRoute.propTypes = {\n\tisAuthenticated: PropTypes.bool.isRequired,\n\tcomponent: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRoute = ({\n\tisAuthenticated,\n\tcomponent: Component,\n\t...rest\n}) => {\n\treturn (\n\t\t<Route\n\t\t\t{...rest}\n\t\t\tcomponent={(props) =>\n\t\t\t\tisAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n\t\t\t}\n\t\t/>\n\t);\n};\n\nPrivateRoute.propTypes = {\n\tisAuthenticated: PropTypes.bool.isRequired,\n\tcomponent: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\tconst [values, setValues] = useState(initialState);\r\n\r\n\tconst reset = () => {\r\n\t\tsetValues(initialState);\r\n\t};\r\n\r\n\tconst handleInputChange = ({ target }) => {\r\n\t\tsetValues({\r\n\t\t\t...values,\r\n\t\t\t[target.name]: target.value,\r\n\t\t});\r\n\t};\r\n\treturn [values, handleInputChange, reset];\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogout } from '../../redux/actions/authAction';\r\n\r\nexport const Navbar = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleLogout = () => {\r\n\t\tdispatch(startLogout());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Navbar</h1>\r\n\t\t\t<button type=\"button\" onClick={handleLogout}>\r\n\t\t\t\tLogout\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { types } from '../types/types';\r\n\r\nexport const openModal = ({\r\n\ttype = 'create',\r\n\tcontent = { title: '', content: '' },\r\n}) => ({\r\n\ttype: types.openModal,\r\n\tpayload: { type, content },\r\n});\r\n\r\nexport const closeModal = () => ({\r\n\ttype: types.closeModal,\r\n});\r\n","import Swal from 'sweetalert2';\r\nimport { fetchConToken } from '../../helpers/fetch';\r\nimport { types } from '../types/types';\r\nimport { closeModal } from './modalAction';\r\n\r\nexport const postsStartLoading = () => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tconst resp = await fetchConToken('posts');\r\n\t\t\tconst body = await resp.json();\r\n\r\n\t\t\tconst { posts } = body;\r\n\r\n\t\t\treturn dispatch({\r\n\t\t\t\ttype: types.postsLoaded,\r\n\t\t\t\tpayload: posts,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tSwal.fire('Error', error, 'error');\r\n\t\t}\r\n\t};\r\n};\r\n\r\n// const postsLoaded = (posts) => ({\r\n//   type: types.postsLoaded,\r\n//   payload: posts,\r\n// });\r\n\r\nexport const sendPost = ({ title, content }) => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tconst resp = await fetchConToken('posts', { title, content }, 'POST');\r\n\t\t\tconst body = await resp.json();\r\n\r\n\t\t\tconst { post } = body;\r\n\r\n\t\t\tif (body.ok) {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: types.sendPost,\r\n\t\t\t\t\tpayload: post,\r\n\t\t\t\t});\r\n\t\t\t\tSwal.fire('Listo!', 'Post Agregado!', 'success');\r\n\t\t\t\tdispatch(closeModal());\r\n\t\t\t\tdispatch(postsStartLoading());\r\n\t\t\t} else {\r\n\t\t\t\tSwal.fire('Error', body.errors.title.msg, 'error');\r\n\t\t\t\tSwal.fire('Error', body.errors.content.msg, 'error');\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tSwal.fire('Error', error, 'error');\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const postDelete = (id) => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tconst resp = await fetchConToken(`posts/${id}`, {}, 'DELETE');\r\n\t\t\tconst body = await resp.json();\r\n\r\n\t\t\tif (body.ok) {\r\n\t\t\t\tdispatch({ type: types.deletePost, payload: id });\r\n\t\t\t\tSwal.fire('Listo!', 'Post Borrado!', 'success');\r\n\t\t\t\tdispatch(postsStartLoading());\r\n\t\t\t} else {\r\n\t\t\t\tSwal.fire('Error', body.msg, 'error');\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tSwal.fire('Error', error, 'error');\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const postUpdate = ({ title, content, id }) => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tconst resp = await fetchConToken(\r\n\t\t\t\t`posts/${id}`,\r\n\t\t\t\t{ title, content, id },\r\n\t\t\t\t'PUT',\r\n\t\t\t);\r\n\t\t\tconst body = await resp.json();\r\n\r\n\t\t\tconst post = {\r\n\t\t\t\ttitle,\r\n\t\t\t\tcontent,\r\n\t\t\t\tid,\r\n\t\t\t};\r\n\r\n\t\t\tif (body.ok) {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: types.updatePost,\r\n\t\t\t\t\tpayload: post,\r\n\t\t\t\t});\r\n\t\t\t\tSwal.fire('Listo!', 'Post Actualizado!', 'success');\r\n\t\t\t\tdispatch(closeModal());\r\n\t\t\t\tdispatch(postsStartLoading());\r\n\t\t\t} else {\r\n\t\t\t\tSwal.fire('Error', body.msg, 'error');\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tSwal.fire('Error', error, 'error');\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const setPostId = (id, title, content) => ({\r\n\ttype: types.postId,\r\n\tpayload: {\r\n\t\tid,\r\n\t\ttitle,\r\n\t\tcontent,\r\n\t},\r\n});\r\n\r\nexport const cleanPost = () => ({\r\n\ttype: types.cleanPost,\r\n\tpayload: {\r\n\t\ttitle: '',\r\n\t\tcontent: '',\r\n\t},\r\n});\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { postDelete } from '../../redux/actions/postAction';\r\nimport { openModal } from '../../redux/actions/modalAction';\r\n\r\nexport const PostCard = ({ user, title, content, id }) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst openDeletePost = () => {\r\n\t\tdispatch(postDelete(id));\r\n\t};\r\n\r\n\tconst HandleOpenModal = () => {\r\n\t\tdispatch(openModal({ type: 'update', content: { id, title, content } }));\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button type=\"button\" onClick={openDeletePost}>\r\n\t\t\t\tEliminar\r\n\t\t\t</button>\r\n\t\t\t<button type=\"button\" onClick={HandleOpenModal}>\r\n\t\t\t\tActualizar\r\n\t\t\t</button>\r\n\t\t\t<h3>{user}</h3>\r\n\t\t\t<span>{title}</span>\r\n\t\t\t<p>{content}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nPostCard.propTypes = {\r\n\tuser: PropTypes.string.isRequired,\r\n\ttitle: PropTypes.string.isRequired,\r\n\tcontent: PropTypes.string.isRequired,\r\n};\r\n\r\nPostCard.defaultProps = {\r\n\tuser: 'User',\r\n\ttitle: 'Title',\r\n\tcontent: 'content',\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { sendPost, postUpdate } from '../../redux/actions/postAction';\r\n\r\nexport const Form = ({ title, content, id = '', type }) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [_state, _setState] = useState({\r\n\t\ttitle: '',\r\n\t\tcontent: '',\r\n\t\tid: '',\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\t_setState({ ..._state, title, content, id });\r\n\t}, []);\r\n\r\n\tconst handleInputChange = ({ target }) => {\r\n\t\t_setState({\r\n\t\t\t..._state,\r\n\t\t\t[target.name]: target.value,\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (type === 'create') dispatch(sendPost(_state));\r\n\t\telse if (type === 'update') dispatch(postUpdate(_state));\r\n\t\t// eslint-disable-next-line no-useless-return\r\n\t\treturn;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={(e) => handleSubmit(e)} className=\"container\">\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"inTitle\"\r\n\t\t\t\tplaceholder=\"Título del post\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"title\"\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\tvalue={_state.title}\r\n\t\t\t\tonChange={(e) => handleInputChange(e)}\r\n\t\t\t/>\r\n\t\t\t<br />\r\n\t\t\t<textarea\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tclassName=\"text-content\"\r\n\t\t\t\tplaceholder=\"Escribe tu post aqui.\"\r\n\t\t\t\tname=\"content\"\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\tvalue={_state.content}\r\n\t\t\t\tonChange={(e) => handleInputChange(e)}\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tclassName=\"mgy center pointer\"\r\n\t\t\t\tvalue={type === 'create' ? 'Postear' : 'Actualizar'}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n};\r\n","/* eslint-disable import/prefer-default-export */\r\nimport React from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { closeModal } from '../../redux/actions/modalAction';\r\nimport { Form } from '../posts/Form';\r\n\r\nModal.setAppElement('#root');\r\n\r\nexport const NewPostModal = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst { openModal, type, selectedPost } = useSelector(({ modal }) => modal);\r\n\r\n\tconst handleCloseModal = () => dispatch(closeModal());\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\tisOpen={openModal}\r\n\t\t\t\tonRequestClose={handleCloseModal}\r\n\t\t\t\tcloseTimeoutMS={200}\r\n\t\t\t\tclassName=\"modal text-right\"\r\n\t\t\t\toverlayClassName=\"modal-fondo\"\r\n\t\t\t>\r\n\t\t\t\t<IconButton aria-label=\"delete\" onClick={handleCloseModal}>\r\n\t\t\t\t\t<CloseIcon fontSize=\"small\" />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t{type === 'create' ? (\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\ttitle={selectedPost.title}\r\n\t\t\t\t\t\tcontent={selectedPost.content}\r\n\t\t\t\t\t\ttype=\"create\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\ttitle={selectedPost.title}\r\n\t\t\t\t\t\tcontent={selectedPost.content}\r\n\t\t\t\t\t\tid={selectedPost.id}\r\n\t\t\t\t\t\ttype=\"update\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { LoginScreen } from '../screens/LoginScreen';\r\nimport { HomeScreen } from '../screens/HomeScreen';\r\nimport { RegisterScreen } from '../screens/RegisterScreen';\r\n\r\nexport const routes = [\r\n\t{\r\n\t\tlayout: 'inicio-sesion',\r\n\t\thasLogged: false,\r\n\t\troutes: [\r\n\t\t\t{\r\n\t\t\t\texact: true,\r\n\t\t\t\tpath: '/login',\r\n\t\t\t\tcomponent: LoginScreen,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\texact: true,\r\n\t\t\t\tpath: '/signup',\r\n\t\t\t\tcomponent: RegisterScreen,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tlayout: 'app',\r\n\t\thasLogged: true,\r\n\t\troutes: [\r\n\t\t\t{\r\n\t\t\t\texact: true,\r\n\t\t\t\tpath: '/',\r\n\t\t\t\tcomponent: HomeScreen,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../hooks/useForm';\r\nimport { startLogin } from '../redux/actions/authAction';\r\n\r\nexport const LoginScreen = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [formLoginValues, handleLoginInputChange] = useForm({\r\n\t\tlemail: 'jorge@gmail.com',\r\n\t\tlpassword: '123456',\r\n\t});\r\n\r\n\tconst { lemail, lpassword } = formLoginValues;\r\n\r\n\tconst handleLogin = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(startLogin(lemail, lpassword));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>LoginScreen</h1>\r\n\t\t\t<form onSubmit={handleLogin}>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t\tname=\"lemail\"\r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tvalue={lemail}\r\n\t\t\t\t\tonChange={handleLoginInputChange}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\tname=\"lpassword\"\r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tvalue={lpassword}\r\n\t\t\t\t\tonChange={handleLoginInputChange}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<input type=\"submit\" className=\"\" value=\"Entrar\" />\r\n\t\t\t\t<Link to=\"/signup\">Sign up</Link>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../hooks/useForm';\r\nimport { startRegister } from '../redux/actions/authAction';\r\n\r\nexport const RegisterScreen = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [formRegisterValues, handleRegisterInputChange] = useForm({\r\n\t\trname: 'jorge',\r\n\t\tremail: 'jorge@gmail.com',\r\n\t\trpassword1: '123456',\r\n\t\trpassword2: '123456',\r\n\t});\r\n\r\n\tconst { rname, remail, rpassword1, rpassword2 } = formRegisterValues;\r\n\r\n\tconst handleRegister = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (rpassword1 !== rpassword2) {\r\n\t\t\treturn Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\r\n\t\t}\r\n\r\n\t\tdispatch(startRegister(rname, remail, rpassword1));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Register</h1>\r\n\t\t\t<form onSubmit={handleRegister}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\tname=\"rname\"\r\n\t\t\t\t\tclassName=\"\"\r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tvalue={rname}\r\n\t\t\t\t\tonChange={handleRegisterInputChange}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t\tname=\"remail\"\r\n\t\t\t\t\tclassName=\"\"\r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tvalue={remail}\r\n\t\t\t\t\tonChange={handleRegisterInputChange}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\tname=\"rpassword1\"\r\n\t\t\t\t\tclassName=\"\"\r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tvalue={rpassword1}\r\n\t\t\t\t\tonChange={handleRegisterInputChange}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Confirm password\"\r\n\t\t\t\t\tname=\"rpassword2\"\r\n\t\t\t\t\tclassName=\"\"\r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tvalue={rpassword2}\r\n\t\t\t\t\tonChange={handleRegisterInputChange}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<input type=\"submit\" className=\"\" value=\"Register\" />\r\n\t\t\t</form>\r\n\t\t\t<Link to=\"/login\">Login</Link>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Navbar } from '../components/ui/Navbar';\r\nimport { PostCard } from '../components/posts/PostCard';\r\nimport { postsStartLoading } from '../redux/actions/postAction';\r\nimport { NewPostModal } from '../components/ui/NewPostModal';\r\nimport { openModal } from '../redux/actions/modalAction';\r\n\r\nexport const HomeScreen = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst { posts } = useSelector((state) => state.posts);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(postsStartLoading());\r\n\t}, [dispatch]);\r\n\r\n\tconst handleOpenModal = () => dispatch(openModal({}));\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>HomeScreen</h1>\r\n\t\t\t<Navbar />\r\n\t\t\t<hr />\r\n\t\t\t<button onClick={() => handleOpenModal()}>Agregar post</button>\r\n\t\t\t<center>\r\n\t\t\t\t{posts.map((post) => (\r\n\t\t\t\t\t<PostCard key={post.id} {...post} user={post.user.name} />\r\n\t\t\t\t))}\r\n\t\t\t</center>\r\n\t\t\t<NewPostModal />\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startChecking } from '../redux/actions/authAction';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { routes } from './routes';\r\n\r\nexport const AppRouter = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst state = useSelector((state) => state.auth);\r\n\tconst { checking, uid } = state;\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(startChecking());\r\n\t}, [dispatch]);\r\n\r\n\tif (checking) {\r\n\t\treturn <h5>Espere...</h5>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<div>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t{routes.map((r) => {\r\n\t\t\t\t\t\tconst Guard = r.hasLogged ? PrivateRoute : PublicRoute;\r\n\t\t\t\t\t\treturn r.routes.map((_r) => (\r\n\t\t\t\t\t\t\t<Guard\r\n\t\t\t\t\t\t\t\tkey={_r.path}\r\n\t\t\t\t\t\t\t\tpath={_r.path}\r\n\t\t\t\t\t\t\t\texact={_r.exact}\r\n\t\t\t\t\t\t\t\tisAuthenticated={!!uid}\r\n\t\t\t\t\t\t\t\tcomponent={_r.component}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t));\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t<Redirect to=\"/login\" />\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store/store';\r\nimport { AppRouter } from './routes/AppRouter';\r\nimport './assets/styles/main.scss';\r\n\r\nexport const AnoniTalksApp = () => {\r\n\treturn (\r\n\t\t<Provider store={store}>\r\n\t\t\t<AppRouter />\r\n\t\t</Provider>\r\n\t);\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AnoniTalksApp } from './AnoniTalksApp';\n\nReactDOM.render(<AnoniTalksApp />, document.getElementById('root'));\n"],"sourceRoot":""}